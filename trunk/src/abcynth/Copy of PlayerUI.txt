package abc.player;

import java.awt.*;
import java.awt.event.*;
import javax.swing.event.*;
import javax.swing.*;
import javax.swing.table.*;
import java.awt.SystemColor;
import abc.notation.*;
import abc.parser.*;
import abc.midi.*;
import scanner.*;
import java.util.*;
import java.io.*;

/** A simple user interface to display abc files content and play
 * tunes. */
public class PlayerUI extends JFrame implements WindowListener
{
  private File m_file = null;
  private TuneBook m_book = null;
  private TuneBookTable table = null;
  private Tune m_selectedTune = null;
  private TunePane tuneTextArea = null;
  private JTextArea m_errorsArea = new JTextArea();
  private JTabbedPane tabbedPane = null;
  private JLabel tempoField = new JLabel("180");
  private JSlider m_tempoSlider = new JSlider(0, 300, 180);
  private Vector tunes = new Vector();
  private TuneParser m_parser = new TuneParser();
  private TunePlayer player = null;
  private File lastDirectory = new File("c:/temp");

  public PlayerUI()
  {
    super("abc4J");
    tuneTextArea = new TunePane(m_parser);

    JMenuBar menuBar = new JMenuBar();
    JMenu menu = new JMenu("File");
    menuBar.add(menu);
    final JMenuItem chooseFile = new JMenuItem("Select File...");
    menu.add(chooseFile);
    ActionListener act = new ActionListener(){
      public void actionPerformed(ActionEvent e)
      {
        JFileChooser chooser = new JFileChooser(lastDirectory);
        int returnVal = chooser.showOpenDialog(chooseFile);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            lastDirectory=file;
            File abcFile = new File(file.getPath());
            setFile(abcFile);
        }
        chooser.setVisible(true);
        try
        {
          ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("essai.dat"));
          oos.writeObject(lastDirectory);
          oos.close();
        }
        catch (Exception ex)
        {
          ex.printStackTrace();
        }

      }
    };
    chooseFile.addActionListener(act);

    JMenu helpMenu = new JMenu("Help");
    menuBar.add(helpMenu);
    JMenuItem aboutItem = new JMenuItem("About abc4J...");
    helpMenu.add(aboutItem);
    act = new ActionListener(){
      public void actionPerformed(ActionEvent e)
      {
        JOptionPane.showMessageDialog(PlayerUI.this, "abc4j\n2003 - Lionel GUEGANTON\n");
      }
    };
    aboutItem.addActionListener(act);

    setJMenuBar(menuBar);


    addWindowListener(this);
    player = new TunePlayer();
    player.start();
    table = new TuneBookTable();

      ListSelectionListener sel = new ListSelectionListener()
      {
        public void valueChanged(ListSelectionEvent e)
        {
          if (!e.getValueIsAdjusting())
          {
            int first = e.getFirstIndex();
            int last = e.getLastIndex();
            int selectedRow = -1;
            if (table.getSelectionModel().isSelectedIndex(first))
              selectedRow = first;
            else
            if (table.getSelectionModel().isSelectedIndex(last))
              selectedRow = last;

            int index = table.getSelectionModel().getMinSelectionIndex();
            int viewColumnNumber = table.convertColumnIndexToView(TuneBookTable.REFERENCE_NUMBER_COLUMN);
            int tuneIndex = ( (Integer) table.getValueAt(index, viewColumnNumber)).intValue();
            try {
              String tu = m_book.getTune(tuneIndex);
            }catch(Exception excpt)
            {
              excpt.printStackTrace();
            }
          }
        }
      };

      table.getSelectionModel().addListSelectionListener(sel);

      JSplitPane splitPane = new JSplitPane(JSplitPane.VERTICAL_SPLIT);
      splitPane.setDividerSize(10);
      splitPane.setOneTouchExpandable(true);
      JScrollPane tablePane = new JScrollPane(table, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);

      JPanel playTunePanel = new JPanel(new BorderLayout());
      JButton playButton = new JButton("PLAY / STOP");
      playTunePanel.add(playButton, BorderLayout.EAST);
      playTunePanel.add(m_tempoSlider, BorderLayout.CENTER);
      playTunePanel.add(tempoField, BorderLayout.WEST);

      JPanel upperPanel = new JPanel(new BorderLayout());

      ChangeListener tempoListener = new ChangeListener()
      {
        public void stateChanged(ChangeEvent e)
        {
          player.setTempo(m_tempoSlider.getValue());
          tempoField.setText((new Integer(m_tempoSlider.getValue())).toString());
        }
      };
      m_tempoSlider.addChangeListener(tempoListener);
      upperPanel.add(tablePane, BorderLayout.CENTER);
      upperPanel.add(playTunePanel, BorderLayout.NORTH);

      splitPane.setTopComponent(upperPanel);

      tabbedPane = new JTabbedPane();

      Component panel1 = new JScrollPane(tuneTextArea,JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
      //tuneTextArea.setFont(new Font("Courrier New", Font.PLAIN, 10));
      tuneTextArea.setEditable(false);
      tabbedPane.addTab("Abc", panel1);
      tabbedPane.setSelectedIndex(0);
      //tabbedPane.setFont(new Font("Courrier",Font.PLAIN, 15));

      tabbedPane.addTab("Errors", new JScrollPane(m_errorsArea, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED));
      m_errorsArea.setEditable(false);

      JTextArea panel3 = new JTextArea();
      panel3.append("NOT YET AVAILABLE");
      panel3.setEditable(false);
      tabbedPane.addTab("Score", panel3);

      JPanel downerPanel = new JPanel(new BorderLayout());
      //downerPanel.add(tuneTextArea, BorderLayout.CENTER);
      downerPanel.add(tabbedPane, BorderLayout.CENTER);

      //splitPane.setBottomComponent(new JScrollPane(downerPanel,JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED));
      splitPane.setBottomComponent(downerPanel);
      getContentPane().add(splitPane);

      table.getSelectionModel().addListSelectionListener(
      new ListSelectionListener()
      {
        public void valueChanged(ListSelectionEvent e)
        {
          int selectedTuneNumber = table.getSelectionModel().getLeadSelectionIndex();
          int viewColumnNumber = table.convertColumnIndexToView(TuneBookTable.REFERENCE_NUMBER_COLUMN);
          selectedTuneNumber = ( (Integer) table.getValueAt(selectedTuneNumber, viewColumnNumber)).intValue();
          try
          {

            m_errorsArea.setText("");
            tabbedPane.setForegroundAt(1, Color.BLACK);
            m_selectedTune = m_parser.parse(m_book.getTune(selectedTuneNumber));
          }
          catch (Exception ex)
          {
            ex.printStackTrace();
          }
        }
      }
      );

      ActionListener actionList = new ActionListener()
      {
        public void actionPerformed(ActionEvent e)
        {
          if (!player.isPlaying()) player.play(m_selectedTune);
          else player.stopPlaying();
        }
      };
      playButton.addActionListener(actionList);

      pack();
      splitPane.setDividerLocation(splitPane.getHeight()/2
      );

      m_parser.addListener(new TuneParserListenerInterface(){

        public void invalidToken(Token token)
        {
          tabbedPane.setForegroundAt(1, Color.RED);
          m_errorsArea.append("Invalid Token : " + token.getValue() + "(" +
                              ParserTools.convertToTypeName(token.getType()) + ")" +
                              "@line" + token.getStartingLine() + ", column " + token.getStartingColumn() + "\n");
        }

        public void validToken(Token token)
        {
          //System.out.println("Accepted : " + token);
        }

        public void invalidCharacter(char character, int column, int line)
        {
          tabbedPane.setForegroundAt(1, Color.RED);
          m_errorsArea.append("Invalid character '" + character + "' @line" + line + ", column " + column + "\n");
        }
      });
  }


  public void setFile(File file)
  {
    m_file = file;
    m_book = new TuneBook(file);
    table.setTuneBook(m_book);
    setTitle("abc4J : " + file.getAbsolutePath() + "\\" + file.getName());
  }

  public void windowActivated(WindowEvent e) {}
  public void windowClosed(WindowEvent e)  {}
  public void windowClosing(WindowEvent e)
  {
    System.exit(0);
    player.stop();
  }

  public void windowDeactivated(WindowEvent e) {}
  public void windowDeiconified(WindowEvent e) {}
  public void windowIconified(WindowEvent e) {}
  public void windowOpened(WindowEvent e) {}

  public static void main (String[] arg)
  {
    PlayerUI ui = new PlayerUI();
    ui.setVisible(true);
  }

}
